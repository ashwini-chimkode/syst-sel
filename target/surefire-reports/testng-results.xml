<?xml version="1.0" encoding="UTF-8"?>
<testng-results total="3" passed="2" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-02-15T08:24:44Z" name="Selenium-Test-cases" finished-at="2023-02-15T08:24:44Z" duration-ms="40">
    <groups>
    </groups>
    <test started-at="2023-02-15T08:24:44Z" name="testCaculate" finished-at="2023-02-15T08:24:44Z" duration-ms="40">
      <class name="CalculatorTestSuccessful">
        <test-method is-config="true" signature="beforeEachTest()[pri:0, instance:CalculatorTestSuccessful@3e3047e6]" started-at="2023-02-15T13:54:44Z" name="beforeEachTest" finished-at="2023-02-15T13:54:44Z" duration-ms="12" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method is-config="true" signature="initCalculator()[pri:0, instance:CalculatorTestSuccessful@3e3047e6]" started-at="2023-02-15T13:54:44Z" name="initCalculator" finished-at="2023-02-15T13:54:44Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initCalculator -->
        <test-method signature="testDivisionException()[pri:0, instance:CalculatorTestSuccessful@3e3047e6]" started-at="2023-02-15T13:54:44Z" name="testDivisionException" finished-at="2023-02-15T13:54:44Z" duration-ms="1" status="PASS">
          <exception class="java.lang.Exception">
            <message>
              <![CDATA[Divider can't be zero]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Exception: Divider can't be zero
	at utils.Calculator.divison(Calculator.java:28)
	at CalculatorTestSuccessful.testDivisionException(CalculatorTestSuccessful.java:56)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1191)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1116)
	at org.testng.TestNG.run(TestNG.java:1024)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:281)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:121)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Exception -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDivisionException -->
        <test-method signature="testDivison()[pri:0, instance:CalculatorTestSuccessful@3e3047e6]" started-at="2023-02-15T13:54:44Z" name="testDivison" finished-at="2023-02-15T13:54:44Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDivison -->
        <test-method signature="testSubstraction()[pri:0, instance:CalculatorTestSuccessful@3e3047e6]" started-at="2023-02-15T13:54:44Z" name="testSubstraction" finished-at="2023-02-15T13:54:44Z" duration-ms="1" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:496)
	at org.testng.Assert.assertTrue(Assert.java:42)
	at org.testng.Assert.assertTrue(Assert.java:52)
	at CalculatorTestSuccessful.testSubstraction(CalculatorTestSuccessful.java:71)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1191)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1116)
	at org.testng.TestNG.run(TestNG.java:1024)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:281)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:121)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSubstraction -->
        <test-method is-config="true" signature="afterEachTest()[pri:0, instance:CalculatorTestSuccessful@3e3047e6]" started-at="2023-02-15T13:54:44Z" name="afterEachTest" finished-at="2023-02-15T13:54:44Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
      </class> <!-- CalculatorTestSuccessful -->
    </test> <!-- testCaculate -->
  </suite> <!-- Selenium-Test-cases -->
</testng-results>
